language: none
sudo: false

cache:
  apt: true
  directories:
    - /tmp/tools

env:
  global:
    - PATH="$HOME/bin:$PATH"
    - CMAKE_VERSION_PREFIX=3.5
    - CMAKE_VERSION_FULL=3.5.2

matrix:
  include:
    - env: CXX=g++-5 CC=gcc-5 GCOV=gcov-5
      addons:
        apt:
          packages:
            - g++-5
          sources: &sources
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
    - env: CXX=g++-6 CC=gcc-6 GCOV=gcov-6
      addons:
        apt:
          packages:
            - g++-6
          sources: &sources
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
    - env: CXX=g++-7 CC=gcc-7 GCOV=gcov-7
      addons:
        apt:
          packages:
            - g++-7
          sources: &sources
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
    - env: CXX=g++-8 CC=gcc-8 GCOV=gcov-8
      addons:
        apt:
          packages:
            - g++-8
          sources: &sources
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
    - env: CXX=g++-9 CC=gcc-9 GCOV=gcov-9
      addons:
        apt:
          packages:
            - g++-9
          sources: &sources
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
    - env: CXX=clang++-3.8 CC=clang-3.8 GCOV=gcov
      addons:
        apt:
          packages:
            - clang-3.8
          sources: *sources

before_install:
  - pip install --user cpp-coveralls

install:
  - mkdir -p /tmp/tools
  - pushd /tmp/tools
  - if [[ ! -f "cmake-$CMAKE_VERSION_FULL-Linux-x86_64.sh" ]]; then
      curl -SOL "https://cmake.org/files/v$CMAKE_VERSION_PREFIX/cmake-$CMAKE_VERSION_FULL-Linux-x86_64.sh";
      chmod +x "cmake-$CMAKE_VERSION_FULL-Linux-x86_64.sh";
    fi
  - ./"cmake-$CMAKE_VERSION_FULL-Linux-x86_64.sh" --prefix="$HOME" --exclude-subdir --skip-license
  - popd

script:
  - mkdir build
  - cd build
  - cmake .. && make
  - ./test/boolinq-test
  - ./bench/boolinq-bench
  
after_success:
  - case "$CC" in
        clang-*)
          echo "Processing llvm coverage with llvm-cov, bypass gcov in cpp-coveralls and submitting";
          find test/CMakeFiles/boolinq-test.dir/ -name '*.cpp.o' | xargs llvm-cov gcov -lp ;
          coveralls --root .. --include include --no-gcov --verbose
          ;;
        *)
          echo "Processing with gcov in cpp-coveralls and submitting";
          coveralls --root .. --include include --gcov-options '\-lp' --gcov $GCOV --verbose
          ;;
    esac
